// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?

var target = 500;

var makeTriangularNumber = function (n) {
  var total = 0;
  for (var i = 1; i <= n; i++) {
    total += i;
  }
  return total;
}

var countFactors = function (number) {
  var count = 0;
  for (var i = 1; i <= Math.sqrt(number); i++) {
    if (number % i === 0) {
      count += 2;
      if (i === Math.sqrt(number)) {
        count--;
      }
    };
  }
  return count;
}

var i = 1;
while (true) {
  if (countFactors(makeTriangularNumber(i)) > target) {
    console.log(makeTriangularNumber(i));
    break;
  }
  i++;
}

// Congratulations, the answer you gave to problem 12 is correct.

// You are the 115933rd person to have solved this problem.
